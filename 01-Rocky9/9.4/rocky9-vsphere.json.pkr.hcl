# This file was autogenerated by the 'packer hcl2_upgrade' command. We
# recommend double checking that everything is correct before going forward. We
# also recommend treating this file as disposable. The HCL2 blocks in this
# file can be moved to other files. For example, the variable blocks could be
# moved to their own 'variables.pkr.hcl' file, etc. Those files need to be
# suffixed with '.pkr.hcl' to be visible to Packer. To use multiple files at
# once they also need to be in the same folder. 'packer inspect folder/'
# will describe to you what is in that folder.

# Avoid mixing go templating calls ( for example ```{{ upper(`string`) }}``` )
# and HCL2 calls (for example '${ var.string_value_example }' ). They won't be
# executed together and the outcome will be unknown.

# See https://www.packer.io/docs/templates/hcl_templates/blocks/packer for more info
packer {
  required_plugins {
    vsphere = {
      source  = "github.com/hashicorp/vsphere"
      version = "~> 1"
    }
  }
}

# All generated input variables will be of 'string' type as this is how Packer JSON
# views them; you can change their type later on. Read the variables type
# constraints documentation
# https://www.packer.io/docs/templates/hcl_templates/variables#type-constraints for more info.
variable "iso_url" {
  type    = string
  default = "[11-Datastore-NUC-1-NVME] ISO-Packer/Rocky-9.4-x86_64-dvd.iso"
}

variable "magic_reference_date" {
  type    = string
  default = "2024-11-26"
}

variable "vm-cpu-num" {
  type    = string
  default = "2"
}

variable "vm-disk-size" {
  type    = string
  default = "40960"
}

variable "vm-folder" {
  type    = string
  default = "98-TEMPLATE"
}

variable "vm-mem-size" {
  type    = string
  default = "2048"
}

variable "vm-name" {
  type    = string
  default = "TEMPLATE-Packer-Rock9"
}

variable "vm-version" {
  type    = string
  default = "21"
}

variable "vm-video-ram" {
  type    = string
  default = "16384"
}

variable "vsphere-cluster" {
  type    = string
  default = "11-NUC-Cluster"
}

variable "vsphere-datacenter" {
  type    = string
  default = "Datacenter"
}

variable "vsphere-datastore" {
  type    = string
  default = "11-Datastore-NUC-1-NVME"
}

variable "vsphere-host" {
  type    = string
  default = "192.168.100.11"
}

variable "vsphere-network" {
  type    = string
  default = "Packer-Network"
}

variable "vsphere-password" {
  type    = string
  default = "VMware1!"
}

variable "vsphere-server" {
  type    = string
  default = "vc.changw.xyz"
}

variable "vsphere-user" {
  type    = string
  default = "administrator@vsphere.local"
}
# The "legacy_isotime" function has been provided for backwards compatability, but we recommend switching to the timestamp and formatdate functions.

# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors on a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/source
source "vsphere-iso" "autogenerated_1" {
  CPUs                 = "${var.vm-cpu-num}"
  RAM                  = "${var.vm-mem-size}"
  RAM_reserve_all      = false
  boot_command         = ["<up>", "<tab>", "<spacebar>", " text inst.ks=hd:sr1:/ks.cfg", "<enter>"]
  boot_wait            = "10s"
  cd_files             = ["./ks.cfg"]
  cd_label             = "OEMDRV"
  cluster              = "${var.vsphere-cluster}"
  convert_to_template  = true
  datacenter           = "${var.vsphere-datacenter}"
  datastore            = "${var.vsphere-datastore}"
  disk_controller_type = "pvscsi"
  folder               = "${var.vm-folder}"
  guest_os_type        = "rockylinux_64Guest"
  insecure_connection  = "true"
  iso_paths            = ["${var.iso_url}"]
  network_adapters {
    network      = "${var.vsphere-network}"
    network_card = "vmxnet3"
  }
  notes        = "Build via Packer in {{ .isotime }} using reference date: {{ .magic_reference_date }}"
  password     = "${var.vsphere-password}"
  ssh_password = "Admin123"
  ssh_username = "root"
  storage {
    disk_size             = "${var.vm-disk-size}"
    disk_thin_provisioned = true
  }
  username       = "${var.vsphere-user}"
  vcenter_server = "${var.vsphere-server}"
  video_ram      = "${var.vm-video-ram}"
  vm_name        = "${var.vm-name}-${legacy_isotime("2006-01-02")}"
  vm_version     = "${var.vm-version}"
}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/build
build {
  sources = ["source.vsphere-iso.autogenerated_1"]

  provisioner "shell" {
    inline = ["sed -i 's/^enabled=1/enabled=0/' /etc/yum.repos.d/*.repo", "wget -O /etc/yum.repos.d/rocky-local.repo  https://repo.changw.xyz/rocky-local.repo", "wget -O /etc/yum.repos.d/epel-local.repo  https://repo.changw.xyz/epel-local.repo", "wget -O /etc/yum.repos.d/epel-local.repo  https://repo.changw.xyz/docker-local.repo", "yum clean all", "yum makecache", "yum update -y", "yum clean all"]
  }

}
